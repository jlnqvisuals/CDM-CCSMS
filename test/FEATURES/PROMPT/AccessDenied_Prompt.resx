<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TimerClose.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9wscWrQ1lgAAAABJRU5ErkJggg==
</value>
  </data>
</root>